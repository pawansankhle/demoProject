<?xml version="1.0" encoding="UTF-8"?>
<beans:beans 
xmlns:beans="http://www.springframework.org/schema/beans" 
xmlns="http://www.springframework.org/schema/security" 
xmlns:cap="http://www.springframework.org/schema/p" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
http://www.springframework.org/schema/security 
http://www.springframework.org/schema/security/spring-security-3.2.xsd ">


<http security="none" pattern="/js/**" />
<http security="none" pattern="/css/**" />
<http security="none" pattern="/images/**"/>
<http security="none" pattern="/index.jsp" />
<http security="none" pattern="/views/**" />
<http security="none" pattern="/rest/**" />
<http security="none" pattern="/uploads/**" />

<http auto-config="true"  use-expressions="true">
    <intercept-url pattern="/**" access="hasRole('ROLE_USER')" />
</http>

<authentication-manager alias="authenticationManager">  
  <authentication-provider>  
   <password-encoder ref="encoder" />  
   <jdbc-user-service data-source-ref="dataSource" users-by-username-query="select username,password,enabled from users where username=?"  
    authorities-by-username-query="select r.roleid,r.rolename,p.permissionname from roles r
               join userrole ur on ur.roleid = r.roleid
               join users u on u.id = ur.userid 
               join rolepermission rp on r.roleid = rp.roleid 
               join permissions p on p.permissionid = rp.permissionid
               where u.username = ?" />  
  </authentication-provider>  
</authentication-manager> 

</beans:beans>
